{
  "type": "object",
  "required": [
    "metadata",
    "nodes",
    "sources",
    "macros",
    "docs",
    "exposures",
    "metrics",
    "selectors"
  ],
  "properties": {
    "metadata": {
      "$ref": "#/definitions/ManifestMetadata",
      "description": "Metadata about the manifest"
    },
    "nodes": {
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "$ref": "#/definitions/CompiledAnalysisNode"
          },
          {
            "$ref": "#/definitions/CompiledSingularTestNode"
          },
          {
            "$ref": "#/definitions/CompiledModelNode"
          },
          {
            "$ref": "#/definitions/CompiledHookNode"
          },
          {
            "$ref": "#/definitions/CompiledRPCNode"
          },
          {
            "$ref": "#/definitions/CompiledSqlNode"
          },
          {
            "$ref": "#/definitions/CompiledGenericTestNode"
          },
          {
            "$ref": "#/definitions/CompiledSeedNode"
          },
          {
            "$ref": "#/definitions/CompiledSnapshotNode"
          },
          {
            "$ref": "#/definitions/ParsedAnalysisNode"
          },
          {
            "$ref": "#/definitions/ParsedSingularTestNode"
          },
          {
            "$ref": "#/definitions/ParsedHookNode"
          },
          {
            "$ref": "#/definitions/ParsedModelNode"
          },
          {
            "$ref": "#/definitions/ParsedRPCNode"
          },
          {
            "$ref": "#/definitions/ParsedSqlNode"
          },
          {
            "$ref": "#/definitions/ParsedGenericTestNode"
          },
          {
            "$ref": "#/definitions/ParsedSeedNode"
          },
          {
            "$ref": "#/definitions/ParsedSnapshotNode"
          }
        ]
      },
      "description": "The nodes defined in the dbt project and its dependencies"
    },
    "sources": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParsedSourceDefinition"
      },
      "description": "The sources defined in the dbt project and its dependencies"
    },
    "macros": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParsedMacro"
      },
      "description": "The macros defined in the dbt project and its dependencies"
    },
    "docs": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParsedDocumentation"
      },
      "description": "The docs defined in the dbt project and its dependencies"
    },
    "exposures": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParsedExposure"
      },
      "description": "The exposures defined in the dbt project and its dependencies"
    },
    "metrics": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParsedMetric"
      },
      "description": "The metrics defined in the dbt project and its dependencies"
    },
    "selectors": {
      "type": "object",
      "description": "The selectors defined in selectors.yml"
    },
    "disabled": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/definitions/CompiledAnalysisNode"
                },
                {
                  "$ref": "#/definitions/CompiledSingularTestNode"
                },
                {
                  "$ref": "#/definitions/CompiledModelNode"
                },
                {
                  "$ref": "#/definitions/CompiledHookNode"
                },
                {
                  "$ref": "#/definitions/CompiledRPCNode"
                },
                {
                  "$ref": "#/definitions/CompiledSqlNode"
                },
                {
                  "$ref": "#/definitions/CompiledGenericTestNode"
                },
                {
                  "$ref": "#/definitions/CompiledSeedNode"
                },
                {
                  "$ref": "#/definitions/CompiledSnapshotNode"
                },
                {
                  "$ref": "#/definitions/ParsedAnalysisNode"
                },
                {
                  "$ref": "#/definitions/ParsedSingularTestNode"
                },
                {
                  "$ref": "#/definitions/ParsedHookNode"
                },
                {
                  "$ref": "#/definitions/ParsedModelNode"
                },
                {
                  "$ref": "#/definitions/ParsedRPCNode"
                },
                {
                  "$ref": "#/definitions/ParsedSqlNode"
                },
                {
                  "$ref": "#/definitions/ParsedGenericTestNode"
                },
                {
                  "$ref": "#/definitions/ParsedSeedNode"
                },
                {
                  "$ref": "#/definitions/ParsedSnapshotNode"
                },
                {
                  "$ref": "#/definitions/ParsedSourceDefinition"
                }
              ]
            }
          }
        },
        {
          "type": "null"
        }
      ],
      "description": "A mapping of the disabled nodes in the target"
    },
    "parent_map": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "type": "null"
        }
      ],
      "description": "A mapping from\u00a0child nodes to their dependencies"
    },
    "child_map": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "type": "null"
        }
      ],
      "description": "A mapping from parent nodes to their dependents"
    }
  },
  "additionalProperties": false,
  "description": "WritableManifest(metadata: dbt.contracts.graph.manifest.ManifestMetadata, nodes: Mapping[str, Union[dbt.contracts.graph.compiled.CompiledAnalysisNode, dbt.contracts.graph.compiled.CompiledSingularTestNode, dbt.contracts.graph.compiled.CompiledModelNode, dbt.contracts.graph.compiled.CompiledHookNode, dbt.contracts.graph.compiled.CompiledRPCNode, dbt.contracts.graph.compiled.CompiledSqlNode, dbt.contracts.graph.compiled.CompiledGenericTestNode, dbt.contracts.graph.compiled.CompiledSeedNode, dbt.contracts.graph.compiled.CompiledSnapshotNode, dbt.contracts.graph.parsed.ParsedAnalysisNode, dbt.contracts.graph.parsed.ParsedSingularTestNode, dbt.contracts.graph.parsed.ParsedHookNode, dbt.contracts.graph.parsed.ParsedModelNode, dbt.contracts.graph.parsed.ParsedRPCNode, dbt.contracts.graph.parsed.ParsedSqlNode, dbt.contracts.graph.parsed.ParsedGenericTestNode, dbt.contracts.graph.parsed.ParsedSeedNode, dbt.contracts.graph.parsed.ParsedSnapshotNode]], sources: Mapping[str, dbt.contracts.graph.parsed.ParsedSourceDefinition], macros: Mapping[str, dbt.contracts.graph.parsed.ParsedMacro], docs: Mapping[str, dbt.contracts.graph.parsed.ParsedDocumentation], exposures: Mapping[str, dbt.contracts.graph.parsed.ParsedExposure], metrics: Mapping[str, dbt.contracts.graph.parsed.ParsedMetric], selectors: Mapping[str, Any], disabled: Union[Mapping[str, List[Union[dbt.contracts.graph.compiled.CompiledAnalysisNode, dbt.contracts.graph.compiled.CompiledSingularTestNode, dbt.contracts.graph.compiled.CompiledModelNode, dbt.contracts.graph.compiled.CompiledHookNode, dbt.contracts.graph.compiled.CompiledRPCNode, dbt.contracts.graph.compiled.CompiledSqlNode, dbt.contracts.graph.compiled.CompiledGenericTestNode, dbt.contracts.graph.compiled.CompiledSeedNode, dbt.contracts.graph.compiled.CompiledSnapshotNode, dbt.contracts.graph.parsed.ParsedAnalysisNode, dbt.contracts.graph.parsed.ParsedSingularTestNode, dbt.contracts.graph.parsed.ParsedHookNode, dbt.contracts.graph.parsed.ParsedModelNode, dbt.contracts.graph.parsed.ParsedRPCNode, dbt.contracts.graph.parsed.ParsedSqlNode, dbt.contracts.graph.parsed.ParsedGenericTestNode, dbt.contracts.graph.parsed.ParsedSeedNode, dbt.contracts.graph.parsed.ParsedSnapshotNode, dbt.contracts.graph.parsed.ParsedSourceDefinition]]], NoneType], parent_map: Union[Dict[str, List[str]], NoneType], child_map: Union[Dict[str, List[str]], NoneType])",
  "definitions": {
    "ManifestMetadata": {
      "type": "object",
      "required": [],
      "properties": {
        "dbt_schema_version": {
          "type": "string",
          "default": "https://schemas.getdbt.com/dbt/manifest/v4.json"
        },
        "dbt_version": {
          "type": "string",
          "default": "1.0.0rc2"
        },
        "generated_at": {
          "type": "string",
          "format": "date-time",
          "default": "2021-11-30T01:35:47.307789Z"
        },
        "invocation_id": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "66dd78f0-c79a-4b06-81b1-99794345df16"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "default": {}
        },
        "project_id": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "A unique identifier for the project"
        },
        "user_id": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
            },
            {
              "type": "null"
            }
          ],
          "description": "A unique identifier for the user"
        },
        "send_anonymous_usage_stats": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "description": "Whether dbt is configured to send anonymous usage statistics"
        },
        "adapter_type": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "The type name of the adapter"
        }
      },
      "additionalProperties": false,
      "description": "Metadata for the manifest."
    },
    "CompiledAnalysisNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "analysis"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.3118432
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledAnalysisNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)"
    },
    "FileHash": {
      "type": "object",
      "required": [
        "name",
        "checksum"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "checksum": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "description": "FileHash(name: str, checksum: str)"
    },
    "NodeConfig": {
      "type": "object",
      "required": [],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "alias": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "default": []
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "materialized": {
          "type": "string",
          "default": "view"
        },
        "persist_docs": {
          "type": "object",
          "default": {}
        },
        "post-hook": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hook"
          },
          "default": []
        },
        "pre-hook": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hook"
          },
          "default": []
        },
        "quoting": {
          "type": "object",
          "default": {}
        },
        "column_types": {
          "type": "object",
          "default": {}
        },
        "full_refresh": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "on_schema_change": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "ignore"
        }
      },
      "additionalProperties": true,
      "description": "NodeConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, materialized: str = 'view', persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, full_refresh: Union[bool, NoneType] = None, on_schema_change: Union[str, NoneType] = 'ignore')"
    },
    "Hook": {
      "type": "object",
      "required": [
        "sql"
      ],
      "properties": {
        "sql": {
          "type": "string"
        },
        "transaction": {
          "type": "boolean",
          "default": true
        },
        "index": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "Hook(sql: str, transaction: bool = True, index: Union[int, NoneType] = None)"
    },
    "DependsOn": {
      "type": "object",
      "required": [],
      "properties": {
        "macros": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "nodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "additionalProperties": false,
      "description": "DependsOn(macros: List[str] = <factory>, nodes: List[str] = <factory>)"
    },
    "ColumnInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "data_type": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "quote": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "additionalProperties": true,
      "description": "ColumnInfo(name: str, description: str = '', meta: Dict[str, Any] = <factory>, data_type: Union[str, NoneType] = None, quote: Union[bool, NoneType] = None, tags: List[str] = <factory>, _extra: Dict[str, Any] = <factory>)"
    },
    "Docs": {
      "type": "object",
      "required": [],
      "properties": {
        "show": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false,
      "description": "Docs(show: bool = True)"
    },
    "InjectedCTE": {
      "type": "object",
      "required": [
        "id",
        "sql"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "sql": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "description": "InjectedCTE(id: str, sql: str)"
    },
    "CompiledSingularTestNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "test"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/TestConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": "dbt_test__audit",
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "test",
            "severity": "ERROR",
            "store_failures": null,
            "where": null,
            "limit": null,
            "fail_calc": "count(*)",
            "warn_if": "!= 0",
            "error_if": "!= 0"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.314477
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledSingularTestNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)"
    },
    "TestConfig": {
      "type": "object",
      "required": [],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "alias": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "dbt_test__audit"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "default": []
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "materialized": {
          "type": "string",
          "default": "test"
        },
        "severity": {
          "type": "string",
          "pattern": "^([Ww][Aa][Rr][Nn]|[Ee][Rr][Rr][Oo][Rr])$",
          "default": "ERROR"
        },
        "store_failures": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "where": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "limit": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ]
        },
        "fail_calc": {
          "type": "string",
          "default": "count(*)"
        },
        "warn_if": {
          "type": "string",
          "default": "!= 0"
        },
        "error_if": {
          "type": "string",
          "default": "!= 0"
        }
      },
      "additionalProperties": true,
      "description": "TestConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = 'dbt_test__audit', database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, materialized: str = 'test', severity: dbt.contracts.graph.model_config.Severity = 'ERROR', store_failures: Union[bool, NoneType] = None, where: Union[str, NoneType] = None, limit: Union[int, NoneType] = None, fail_calc: str = 'count(*)', warn_if: str = '!= 0', error_if: str = '!= 0')"
    },
    "CompiledModelNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "model"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.315979
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledModelNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)"
    },
    "CompiledHookNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "operation"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.317642
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "index": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledHookNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None, index: Union[int, NoneType] = None)"
    },
    "CompiledRPCNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "rpc"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.319278
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledRPCNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)"
    },
    "CompiledSqlNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "sql"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.321433
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledSqlNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)"
    },
    "CompiledGenericTestNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "test_metadata",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "test_metadata": {
          "$ref": "#/definitions/TestMetadata"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "test"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/TestConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": "dbt_test__audit",
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "test",
            "severity": "ERROR",
            "store_failures": null,
            "where": null,
            "limit": null,
            "fail_calc": "count(*)",
            "warn_if": "!= 0",
            "error_if": "!= 0"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.323731
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "column_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "file_key_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledGenericTestNode(raw_sql: str, test_metadata: dbt.contracts.graph.parsed.TestMetadata, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None, column_name: Union[str, NoneType] = None, file_key_name: Union[str, NoneType] = None)"
    },
    "TestMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "kwargs": {
          "type": "object",
          "default": {}
        },
        "namespace": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "TestMetadata(name: str, kwargs: Dict[str, Any] = <factory>, namespace: Union[str, NoneType] = None)"
    },
    "CompiledSeedNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "seed"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/SeedConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "seed",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "quote_columns": null,
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.326388
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledSeedNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SeedConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)"
    },
    "SeedConfig": {
      "type": "object",
      "required": [],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "alias": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "default": []
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "materialized": {
          "type": "string",
          "default": "seed"
        },
        "persist_docs": {
          "type": "object",
          "default": {}
        },
        "post-hook": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hook"
          },
          "default": []
        },
        "pre-hook": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hook"
          },
          "default": []
        },
        "quoting": {
          "type": "object",
          "default": {}
        },
        "column_types": {
          "type": "object",
          "default": {}
        },
        "full_refresh": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "on_schema_change": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "ignore"
        },
        "quote_columns": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": true,
      "description": "SeedConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, materialized: str = 'seed', persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, full_refresh: Union[bool, NoneType] = None, on_schema_change: Union[str, NoneType] = 'ignore', quote_columns: Union[bool, NoneType] = None)"
    },
    "CompiledSnapshotNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "compiled",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "compiled": {
          "type": "boolean"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "snapshot"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.328031
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "compiled_sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "extra_ctes_injected": {
          "type": "boolean",
          "default": false
        },
        "extra_ctes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InjectedCTE"
          },
          "default": []
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "CompiledSnapshotNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)"
    },
    "ParsedAnalysisNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "analysis"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.329485
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "ParsedAnalysisNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>)"
    },
    "ParsedSingularTestNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "test"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/TestConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": "dbt_test__audit",
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "test",
            "severity": "ERROR",
            "store_failures": null,
            "where": null,
            "limit": null,
            "fail_calc": "count(*)",
            "warn_if": "!= 0",
            "error_if": "!= 0"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.3306549
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "ParsedSingularTestNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>)"
    },
    "ParsedHookNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "operation"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.332001
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "index": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "ParsedHookNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, index: Union[int, NoneType] = None)"
    },
    "ParsedModelNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "model"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.333348
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "ParsedModelNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>)"
    },
    "ParsedRPCNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "rpc"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.335125
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "ParsedRPCNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>)"
    },
    "ParsedSqlNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "sql"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "view",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.336567
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "ParsedSqlNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>)"
    },
    "ParsedGenericTestNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "test_metadata",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "test_metadata": {
          "$ref": "#/definitions/TestMetadata"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "test"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/TestConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": "dbt_test__audit",
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "test",
            "severity": "ERROR",
            "store_failures": null,
            "where": null,
            "limit": null,
            "fail_calc": "count(*)",
            "warn_if": "!= 0",
            "error_if": "!= 0"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.3383949
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        },
        "column_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "file_key_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "ParsedGenericTestNode(raw_sql: str, test_metadata: dbt.contracts.graph.parsed.TestMetadata, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>, column_name: Union[str, NoneType] = None, file_key_name: Union[str, NoneType] = None)"
    },
    "ParsedSeedNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "seed"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/SeedConfig",
          "default": {
            "enabled": true,
            "alias": null,
            "schema": null,
            "database": null,
            "tags": [],
            "meta": {},
            "materialized": "seed",
            "persist_docs": {},
            "quoting": {},
            "column_types": {},
            "full_refresh": null,
            "on_schema_change": "ignore",
            "quote_columns": null,
            "post-hook": [],
            "pre-hook": []
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.339838
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "ParsedSeedNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SeedConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>)"
    },
    "ParsedSnapshotNode": {
      "type": "object",
      "required": [
        "raw_sql",
        "schema",
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "resource_type",
        "alias",
        "checksum",
        "config"
      ],
      "properties": {
        "raw_sql": {
          "type": "string"
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "snapshot"
          ]
        },
        "alias": {
          "type": "string"
        },
        "checksum": {
          "$ref": "#/definitions/FileHash"
        },
        "config": {
          "$ref": "#/definitions/SnapshotConfig"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "compiled_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "build_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "deferred": {
          "type": "boolean",
          "default": false
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.3425322
        },
        "config_call_dict": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "ParsedSnapshotNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SnapshotConfig, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: float = <factory>, config_call_dict: Dict[str, Any] = <factory>)"
    },
    "SnapshotConfig": {
      "type": "object",
      "required": [],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "alias": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "default": []
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "materialized": {
          "type": "string",
          "default": "snapshot"
        },
        "persist_docs": {
          "type": "object",
          "default": {}
        },
        "post-hook": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hook"
          },
          "default": []
        },
        "pre-hook": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hook"
          },
          "default": []
        },
        "quoting": {
          "type": "object",
          "default": {}
        },
        "column_types": {
          "type": "object",
          "default": {}
        },
        "full_refresh": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "on_schema_change": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "ignore"
        },
        "strategy": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "unique_key": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "target_schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "target_database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "updated_at": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "check_cols": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": true,
      "description": "SnapshotConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, meta: Dict[str, Any] = <factory>, materialized: str = 'snapshot', persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, full_refresh: Union[bool, NoneType] = None, on_schema_change: Union[str, NoneType] = 'ignore', strategy: Union[str, NoneType] = None, unique_key: Union[str, NoneType] = None, target_schema: Union[str, NoneType] = None, target_database: Union[str, NoneType] = None, updated_at: Union[str, NoneType] = None, check_cols: Union[str, List[str], NoneType] = None)"
    },
    "ParsedSourceDefinition": {
      "type": "object",
      "required": [
        "fqn",
        "schema",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "source_name",
        "source_description",
        "loader",
        "identifier",
        "resource_type"
      ],
      "properties": {
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "database": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "type": "string"
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "source_name": {
          "type": "string"
        },
        "source_description": {
          "type": "string"
        },
        "loader": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "source"
          ]
        },
        "quoting": {
          "$ref": "#/definitions/Quoting",
          "default": {
            "database": null,
            "schema": null,
            "identifier": null,
            "column": null
          }
        },
        "loaded_at_field": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "freshness": {
          "oneOf": [
            {
              "$ref": "#/definitions/FreshnessThreshold"
            },
            {
              "type": "null"
            }
          ]
        },
        "external": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExternalTable"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "columns": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ColumnInfo"
          },
          "default": {}
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "source_meta": {
          "type": "object",
          "default": {}
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "config": {
          "$ref": "#/definitions/SourceConfig",
          "default": {
            "enabled": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "unrendered_config": {
          "type": "object",
          "default": {}
        },
        "relation_name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.345053
        }
      },
      "additionalProperties": false,
      "description": "ParsedSourceDefinition(fqn: List[str], database: Union[str, NoneType], schema: str, unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, source_name: str, source_description: str, loader: str, identifier: str, resource_type: dbt.node_types.NodeType, quoting: dbt.contracts.graph.unparsed.Quoting = <factory>, loaded_at_field: Union[str, NoneType] = None, freshness: Union[dbt.contracts.graph.unparsed.FreshnessThreshold, NoneType] = None, external: Union[dbt.contracts.graph.unparsed.ExternalTable, NoneType] = None, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, source_meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, config: dbt.contracts.graph.model_config.SourceConfig = <factory>, patch_path: Union[pathlib.Path, NoneType] = None, unrendered_config: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, created_at: float = <factory>)"
    },
    "Quoting": {
      "type": "object",
      "required": [],
      "properties": {
        "database": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "schema": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "identifier": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "column": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "Quoting(database: Union[bool, NoneType] = None, schema: Union[bool, NoneType] = None, identifier: Union[bool, NoneType] = None, column: Union[bool, NoneType] = None)"
    },
    "FreshnessThreshold": {
      "type": "object",
      "required": [],
      "properties": {
        "warn_after": {
          "oneOf": [
            {
              "$ref": "#/definitions/Time"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "count": null,
            "period": null
          }
        },
        "error_after": {
          "oneOf": [
            {
              "$ref": "#/definitions/Time"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "count": null,
            "period": null
          }
        },
        "filter": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "FreshnessThreshold(warn_after: Union[dbt.contracts.graph.unparsed.Time, NoneType] = <factory>, error_after: Union[dbt.contracts.graph.unparsed.Time, NoneType] = <factory>, filter: Union[str, NoneType] = None)"
    },
    "FreshnessMetadata": {
      "type": "object",
      "required": [],
      "properties": {
        "dbt_schema_version": {
          "type": "string",
          "default": "https://schemas.getdbt.com/dbt/sources/v3.json"
        },
        "dbt_version": {
          "type": "string",
          "default": "1.0.0rc2"
        },
        "generated_at": {
          "type": "string",
          "format": "date-time",
          "default": "2021-11-30T01:35:47.301745Z"
        },
        "invocation_id": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "66dd78f0-c79a-4b06-81b1-99794345df16"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "default": {}
        }
      },
      "additionalProperties": false,
      "description": "FreshnessMetadata(dbt_schema_version: str = <factory>, dbt_version: str = '1.0.0rc2', generated_at: datetime.datetime = <factory>, invocation_id: Union[str, NoneType] = <factory>, env: Dict[str, str] = <factory>)"
    },
    "SourceFreshnessRuntimeError": {
      "type": "object",
      "required": [
        "unique_id",
        "status"
      ],
      "properties": {
        "unique_id": {
          "type": "string"
        },
        "error": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "runtime error"
          ]
        }
      },
      "additionalProperties": false,
      "description": "SourceFreshnessRuntimeError(unique_id: str, error: Union[str, int, NoneType], status: dbt.contracts.results.FreshnessErrorEnum)"
    },
    "SourceFreshnessOutput": {
      "type": "object",
      "required": [
        "unique_id",
        "max_loaded_at",
        "snapshotted_at",
        "max_loaded_at_time_ago_in_s",
        "status",
        "criteria",
        "adapter_response",
        "timing",
        "thread_id",
        "execution_time"
      ],
      "properties": {
        "unique_id": {
          "type": "string"
        },
        "max_loaded_at": {
          "type": "string",
          "format": "date-time"
        },
        "snapshotted_at": {
          "type": "string",
          "format": "date-time"
        },
        "max_loaded_at_time_ago_in_s": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "enum": [
            "pass",
            "warn",
            "error",
            "runtime error"
          ]
        },
        "criteria": {
          "$ref": "#/definitions/FreshnessThreshold"
        },
        "adapter_response": {
          "type": "object"
        },
        "timing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimingInfo"
          }
        },
        "thread_id": {
          "type": "string"
        },
        "execution_time": {
          "type": "number"
        }
      },
      "additionalProperties": false,
      "description": "SourceFreshnessOutput(unique_id: str, max_loaded_at: datetime.datetime, snapshotted_at: datetime.datetime, max_loaded_at_time_ago_in_s: float, status: dbt.contracts.results.FreshnessStatus, criteria: dbt.contracts.graph.unparsed.FreshnessThreshold, adapter_response: Dict[str, Any], timing: List[dbt.contracts.results.TimingInfo], thread_id: str, execution_time: float)"
    },
    "Time": {
      "type": "object",
      "required": [],
      "properties": {
        "count": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ]
        },
        "period": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "minute",
                "hour",
                "day"
              ]
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "Time(count: Union[int, NoneType] = None, period: Union[dbt.contracts.graph.unparsed.TimePeriod, NoneType] = None)"
    },
    "TimingInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "started_at": {
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "completed_at": {
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "TimingInfo(name: str, started_at: Union[datetime.datetime, NoneType] = None, completed_at: Union[datetime.datetime, NoneType] = None)"
    },
    "ExternalTable": {
      "type": "object",
      "required": [],
      "properties": {
        "location": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "file_format": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "row_format": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "tbl_properties": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "partitions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalPartition"
              }
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": true,
      "description": "ExternalTable(_extra: Dict[str, Any] = <factory>, location: Union[str, NoneType] = None, file_format: Union[str, NoneType] = None, row_format: Union[str, NoneType] = None, tbl_properties: Union[str, NoneType] = None, partitions: Union[List[dbt.contracts.graph.unparsed.ExternalPartition], NoneType] = None)"
    },
    "ExternalPartition": {
      "type": "object",
      "required": [],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "data_type": {
          "type": "string",
          "default": ""
        },
        "meta": {
          "type": "object",
          "default": {}
        }
      },
      "additionalProperties": true,
      "description": "ExternalPartition(_extra: Dict[str, Any] = <factory>, name: str = '', description: str = '', data_type: str = '', meta: Dict[str, Any] = <factory>)"
    },
    "SourceConfig": {
      "type": "object",
      "required": [],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": true,
      "description": "SourceConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True)"
    },
    "ParsedMacro": {
      "type": "object",
      "required": [
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "macro_sql",
        "resource_type"
      ],
      "properties": {
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "macro_sql": {
          "type": "string"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "macro"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/MacroDependsOn",
          "default": {
            "macros": []
          }
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "docs": {
          "$ref": "#/definitions/Docs",
          "default": {
            "show": true
          }
        },
        "patch_path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MacroArgument"
          },
          "default": []
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.345993
        }
      },
      "additionalProperties": false,
      "description": "ParsedMacro(unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, macro_sql: str, resource_type: dbt.node_types.NodeType, tags: List[str] = <factory>, depends_on: dbt.contracts.graph.parsed.MacroDependsOn = <factory>, description: str = '', meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, arguments: List[dbt.contracts.graph.unparsed.MacroArgument] = <factory>, created_at: float = <factory>)"
    },
    "MacroDependsOn": {
      "type": "object",
      "required": [],
      "properties": {
        "macros": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "additionalProperties": false,
      "description": "MacroDependsOn(macros: List[str] = <factory>)"
    },
    "MacroArgument": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "description": {
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false,
      "description": "MacroArgument(name: str, type: Union[str, NoneType] = None, description: str = '')"
    },
    "ParsedDocumentation": {
      "type": "object",
      "required": [
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "block_contents"
      ],
      "properties": {
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "block_contents": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "description": "ParsedDocumentation(unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, block_contents: str)"
    },
    "ParsedExposure": {
      "type": "object",
      "required": [
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "name",
        "type",
        "owner"
      ],
      "properties": {
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "dashboard",
            "notebook",
            "analysis",
            "ml",
            "application"
          ]
        },
        "owner": {
          "$ref": "#/definitions/ExposureOwner"
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "model",
            "analysis",
            "test",
            "snapshot",
            "operation",
            "seed",
            "rpc",
            "sql",
            "docs",
            "source",
            "macro",
            "exposure",
            "metric"
          ],
          "default": "exposure"
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "maturity": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high"
              ]
            },
            {
              "type": "null"
            }
          ]
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "url": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.347234
        }
      },
      "additionalProperties": false,
      "description": "ParsedExposure(fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, type: dbt.contracts.graph.unparsed.ExposureType, owner: dbt.contracts.graph.unparsed.ExposureOwner, resource_type: dbt.node_types.NodeType = <NodeType.Exposure: 'exposure'>, description: str = '', maturity: Union[dbt.contracts.graph.unparsed.MaturityType, NoneType] = None, meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, url: Union[str, NoneType] = None, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, created_at: float = <factory>)"
    },
    "ExposureOwner": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "description": "ExposureOwner(email: str, name: Union[str, NoneType] = None)"
    },
    "ParsedMetric": {
      "type": "object",
      "required": [
        "fqn",
        "unique_id",
        "package_name",
        "root_path",
        "path",
        "original_file_path",
        "model",
        "name",
        "description",
        "label",
        "type",
        "filters",
        "time_grains",
        "dimensions"
      ],
      "properties": {
        "fqn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique_id": {
          "type": "string"
        },
        "package_name": {
          "type": "string"
        },
        "root_path": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "original_file_path": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "sql": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "timestamp": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricFilter"
          }
        },
        "time_grains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dimensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource_type": {
          "type": "string",
          "enum": [
            "model",
            "analysis",
            "test",
            "snapshot",
            "operation",
            "seed",
            "rpc",
            "sql",
            "docs",
            "source",
            "macro",
            "exposure",
            "metric"
          ],
          "default": "metric"
        },
        "meta": {
          "type": "object",
          "default": {}
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "depends_on": {
          "$ref": "#/definitions/DependsOn",
          "default": {
            "macros": [],
            "nodes": []
          }
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": []
        },
        "created_at": {
          "type": "number",
          "default": 1638236147.348404
        }
      },
      "additionalProperties": false,
      "description": "ParsedMetric(fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, model: str, name: str, description: str, label: str, type: str, sql: Union[str, NoneType], timestamp: Union[str, NoneType], filters: List[dbt.contracts.graph.unparsed.MetricFilter], time_grains: List[str], dimensions: List[str], resource_type: dbt.node_types.NodeType = <NodeType.Metric: 'metric'>, meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, sources: List[List[str]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, refs: List[List[str]] = <factory>, created_at: float = <factory>)"
    },
    "MetricFilter": {
      "type": "object",
      "required": [
        "field",
        "operator",
        "value"
      ],
      "properties": {
        "field": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "description": "MetricFilter(field: str, operator: str, value: str)"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://schemas.getdbt.com/dbt/manifest/v4.json"
}