{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.0", "generated_at": "2023-11-06T00:52:43.487173Z", "invocation_id": "7ee58a18-366a-45b0-a0f2-a8a09f5e87ec", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:37.898820Z", "completed_at": "2023-11-06T00:51:37.921391Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:37.924045Z", "completed_at": "2023-11-06T00:51:42.459818Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.576366186141968, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "4a39395d-8a72-4681-b6cf-b72535a0758a", "slot_ms": 1056}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\n    \n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as full_table_name\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as data_type\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n\n", "relation_name": "`your-project`.`elementary`.`dbt_columns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:37.887759Z", "completed_at": "2023-11-06T00:51:37.922373Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:37.979050Z", "completed_at": "2023-11-06T00:51:44.129773Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 6.247795820236206, "adapter_response": {"_message": "MERGE (0.0 rows, 66.5 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 68048, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "68089a03-dd91-4cb7-b9de-8f76a1c00005", "slot_ms": 3219}, "message": "MERGE (0.0 rows, 66.5 KiB processed)", "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as id\n\n,\n                \n        cast('dummy_string' as string) as full_table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as metric_name\n\n,\n                \n        cast(123456789.99 as FLOAT64) as metric_value\n\n,\n                \n        cast('dummy_string' as string) as source_value\n\n,\n                cast('2091-02-17' as timestamp) as bucket_start\n\n,\n                cast('2091-02-17' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as INT64) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as timestamp) as updated_at\n\n,\n                \n        cast('dummy_string' as string) as dimension\n\n,\n                \n        cast('dummy_string' as string) as dimension_value\n\n,\n                \n        cast('dummy_string' as string) as metric_properties\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`data_monitoring_metrics`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:42.468667Z", "completed_at": "2023-11-06T00:51:42.500539Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:42.501516Z", "completed_at": "2023-11-06T00:51:47.626290Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 5.162376165390015, "adapter_response": {"_message": "MERGE (0.0 rows, 3.5 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 3561, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "353aa93c-64c0-4924-ab1b-a077a62bd210", "slot_ms": 2708}, "message": "MERGE (0.0 rows, 3.5 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_run_id\n\n,\n                \n        cast('dummy_string' as string) as run_started_at\n\n,\n                \n        cast('dummy_string' as string) as run_completed_at\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as string) as command\n\n,\n                \n        cast('dummy_string' as string) as dbt_version\n\n,\n                \n        cast('dummy_string' as string) as elementary_version\n\n,\n                \n        cast (True as BOOL) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as vars\n\n,\n                \n        cast('dummy_string' as string) as target_name\n\n,\n                \n        cast('dummy_string' as string) as target_database\n\n,\n                \n        cast('dummy_string' as string) as target_schema\n\n,\n                \n        cast('dummy_string' as string) as target_profile_name\n\n,\n                \n        cast(123456789 as INT64) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as yaml_selector\n\n,\n                \n        cast('dummy_string' as string) as project_id\n\n,\n                \n        cast('dummy_string' as string) as project_name\n\n,\n                \n        cast('dummy_string' as string) as env\n\n,\n                \n        cast('dummy_string' as string) as env_id\n\n,\n                \n        cast('dummy_string' as string) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as cause\n\n,\n                \n        cast('dummy_string' as string) as pull_request_id\n\n,\n                \n        cast('dummy_string' as string) as git_sha\n\n,\n                \n        cast('dummy_string' as string) as orchestrator\n\n,\n                \n        cast('dummy_string' as string) as dbt_user\n\n,\n                \n        cast('dummy_string' as string) as job_url\n\n,\n                \n        cast('dummy_string' as string) as job_run_url\n\n,\n                \n        cast('dummy_string' as string) as account_id\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_invocations`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:37.906909Z", "completed_at": "2023-11-06T00:51:37.921893Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:37.948215Z", "completed_at": "2023-11-06T00:51:47.736512Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 9.851315975189209, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "e4bb5671-49f3-4aac-b5f5-ecd0e9a2c963", "slot_ms": 3266}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as maturity\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('dummy_string' as string) as owner_email\n\n,\n                \n        cast('dummy_string' as string) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as raw_queries\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_exposures`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:47.741128Z", "completed_at": "2023-11-06T00:51:47.755966Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:47.756762Z", "completed_at": "2023-11-06T00:51:52.963514Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 5.227319717407227, "adapter_response": {"_message": "MERGE (0.0 rows, 859.2 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 879783, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "f9498e03-3fcb-4cde-a484-620ada927b5d", "slot_ms": 3455}, "message": "MERGE (0.0 rows, 859.2 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as message\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast('dummy_string' as string) as resource_type\n\n,\n                \n        cast(123456789.99 as FLOAT64) as execution_time\n\n,\n                \n        cast('dummy_string' as string) as execute_started_at\n\n,\n                \n        cast('dummy_string' as string) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as string) as compile_started_at\n\n,\n                \n        cast('dummy_string' as string) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as BOOL) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as string) as query_id\n\n,\n                \n        cast('dummy_string' as string) as thread_id\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('dummy_string' as string) as adapter_response\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_run_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:44.144887Z", "completed_at": "2023-11-06T00:51:44.171890Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:44.173069Z", "completed_at": "2023-11-06T00:51:54.111388Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 9.98807692527771, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "d65b6ed3-e5e4-425a-be02-fc631a882414", "slot_ms": 3130}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as label\n\n,\n                \n        cast('dummy_string' as string) as model\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as sql\n\n,\n                \n        cast('dummy_string' as string) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_metrics`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:47.644074Z", "completed_at": "2023-11-06T00:51:47.667418Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:47.668205Z", "completed_at": "2023-11-06T00:51:59.002448Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 11.362609148025513, "adapter_response": {"_message": "MERGE (0.0 rows, 21.5 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 21967, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "8345785c-ab7f-43fe-b056-de7b7c13cb7e", "slot_ms": 3129}, "message": "MERGE (0.0 rows, 21.5 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as bigquery_partition_by\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_models`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:54.194191Z", "completed_at": "2023-11-06T00:51:54.272119Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:54.289383Z", "completed_at": "2023-11-06T00:52:02.675353Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 8.495818138122559, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "57514ad6-b45a-4e36-b213-3638a2f83a80", "slot_ms": 2729}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as bigquery_partition_by\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_snapshots`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:52.980543Z", "completed_at": "2023-11-06T00:51:53.005292Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:53.006526Z", "completed_at": "2023-11-06T00:52:03.357249Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 10.381341218948364, "adapter_response": {"_message": "MERGE (0.0 rows, 832.0 Bytes processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 832, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "fd897f5f-6ff4-49cf-811a-3243380f5205", "slot_ms": 3530}, "message": "MERGE (0.0 rows, 832.0 Bytes processed)", "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_seeds`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:51:59.009692Z", "completed_at": "2023-11-06T00:51:59.028413Z"}, {"name": "execute", "started_at": "2023-11-06T00:51:59.029488Z", "completed_at": "2023-11-06T00:52:03.393099Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.385948896408081, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "eae2a750-ae39-4178-99e6-c11d30ca574c", "slot_ms": 3062}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as string) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as FLOAT64) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast('dummy_string' as string) as error\n\n,\n                \n        cast('dummy_string' as string) as compile_started_at\n\n,\n                \n        cast('dummy_string' as string) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as string) as execute_started_at\n\n,\n                \n        cast('dummy_string' as string) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                \n        cast('dummy_string' as string) as warn_after\n\n,\n                \n        cast('dummy_string' as string) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as filter\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`dbt_source_freshness_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:03.449658Z", "completed_at": "2023-11-06T00:52:03.485531Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:03.504597Z", "completed_at": "2023-11-06T00:52:08.150510Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.726131200790405, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "163e3d84-df48-4321-b53d-67125f09a809", "slot_ms": 1770}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.elementary_exposures", "compiled": true, "compiled_code": "\n\n\n    \n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as maturity\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('dummy_string' as string) as owner_email\n\n,\n                \n        cast('dummy_string' as string) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as raw_queries\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`elementary_exposures`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:02.693182Z", "completed_at": "2023-11-06T00:52:02.717456Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:02.718785Z", "completed_at": "2023-11-06T00:52:10.425953Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 7.736460208892822, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "d7852ac0-7f6f-44f0-87a5-c8666831e80f", "slot_ms": 2963}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as source_name\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as identifier\n\n,\n                \n        cast('dummy_string' as string) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as string) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as string) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as freshness_description\n\n,\n                \n        cast('dummy_string' as string) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_sources`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:08.192652Z", "completed_at": "2023-11-06T00:52:08.241942Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:08.243673Z", "completed_at": "2023-11-06T00:52:12.677522Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.492099046707153, "adapter_response": {"_message": "MERGE (0.0 rows, 155.6 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 159352, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "60dd3b0f-1a8e-4432-a873-dcd0c4f948b0", "slot_ms": 2911}, "message": "MERGE (0.0 rows, 155.6 KiB processed)", "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as id\n\n,\n                \n        cast('dummy_string' as string) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_unique_id\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as test_type\n\n,\n                \n        cast('dummy_string' as string) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_results_description\n\n,\n                \n        cast('dummy_string' as string) as owners\n\n,\n                \n        cast('dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_results_query\n\n,\n                \n        cast('dummy_string' as string) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_params\n\n,\n                \n        cast('dummy_string' as string) as severity\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as string) as test_short_name\n\n,\n                \n        cast('dummy_string' as string) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`elementary_test_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:10.441410Z", "completed_at": "2023-11-06T00:52:10.452413Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:10.453913Z", "completed_at": "2023-11-06T00:52:13.046621Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.612107038497925, "adapter_response": {"_message": "CREATE TABLE (1.0 rows, 0 processed)", "code": "CREATE TABLE", "rows_affected": 1, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "f4077d4a-6efb-4168-8951-b7f9935131c5", "slot_ms": 254}, "message": "CREATE TABLE (1.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.11.1' as dbt_pkg_version", "relation_name": "`your-project`.`elementary`.`metadata`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:03.370983Z", "completed_at": "2023-11-06T00:52:03.395462Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:03.397139Z", "completed_at": "2023-11-06T00:52:14.334033Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 10.970672845840454, "adapter_response": {"_message": "MERGE (0.0 rows, 15.8 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 16213, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "969bbb13-f3ec-4eda-b265-c85c56801f31", "slot_ms": 1621}, "message": "MERGE (0.0 rows, 15.8 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as short_name\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as test_column_name\n\n,\n                \n        cast('dummy_string' as string) as severity\n\n,\n                \n        cast('dummy_string' as string) as warn_if\n\n,\n                \n        cast('dummy_string' as string) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_params\n\n,\n                \n        cast('dummy_string' as string) as test_namespace\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as string) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as quality_dimension\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_tests`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:13.063709Z", "completed_at": "2023-11-06T00:52:13.063715Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:13.065678Z", "completed_at": "2023-11-06T00:52:16.735979Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.676194906234741, "adapter_response": {"_message": "INSERT 100", "code": "INSERT", "rows_affected": 100}, "message": "INSERT 100", "failures": null, "unique_id": "seed.jaffle_shop.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:12.693351Z", "completed_at": "2023-11-06T00:52:12.705870Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:12.706870Z", "completed_at": "2023-11-06T00:52:16.984873Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.295874834060669, "adapter_response": {"_message": "MERGE (0.0 rows, 2.3 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 2338, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "c25a59d8-9989-452b-a49c-35097d4c6b49", "slot_ms": 2916}, "message": "MERGE (0.0 rows, 2.3 KiB processed)", "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as string) as column_state_id\n\n,\n                \n        cast('dummy_string' as string) as full_column_name\n\n,\n                \n        cast('dummy_string' as string) as full_table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as data_type\n\n,\n                \n        cast (True as BOOL) as is_new\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`schema_columns_snapshot`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:14.356100Z", "completed_at": "2023-11-06T00:52:14.356110Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:14.357689Z", "completed_at": "2023-11-06T00:52:17.663105Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.3155219554901123, "adapter_response": {"_message": "INSERT 99", "code": "INSERT", "rows_affected": 99}, "message": "INSERT 99", "failures": null, "unique_id": "seed.jaffle_shop.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:17.001936Z", "completed_at": "2023-11-06T00:52:17.021058Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:17.022262Z", "completed_at": "2023-11-06T00:52:17.766578Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.7679300308227539, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "f26f20e9-c3c9-4ca0-95e3-5bd90cd5df3b", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from `your-project`.`elementary`.`data_monitoring_metrics`\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and training_set_size >= 7\n            and bucket_end >= \n       timestamp_add(cast(\n    timestamp_trunc(cast(current_timestamp as timestamp), day)\n as timestamp), INTERVAL cast(-7 as INT64) day)\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "`your-project`.`elementary`.`metrics_anomaly_score`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:17.677109Z", "completed_at": "2023-11-06T00:52:17.698155Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:17.703002Z", "completed_at": "2023-11-06T00:52:18.505184Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.8377251625061035, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "322bab92-035a-41ec-af3b-f56ff10cc38c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from `your-project`.`elementary`.`data_monitoring_metrics`\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "`your-project`.`elementary`.`monitors_runs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:17.771755Z", "completed_at": "2023-11-06T00:52:17.778616Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:17.779480Z", "completed_at": "2023-11-06T00:52:18.576896Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.8071019649505615, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "76363702-62c3-4c2b-9228-2a430adbb306", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    timestamp_diff(\nmax(cast(run_completed_at as timestamp))\n, \nmin(cast(run_started_at as timestamp))\n, second)\n as job_run_execution_time\n  from `your-project`.`elementary`.`dbt_invocations`\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "`your-project`.`elementary`.`job_run_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:18.531160Z", "completed_at": "2023-11-06T00:52:18.544779Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:18.545973Z", "completed_at": "2023-11-06T00:52:19.209781Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6836998462677002, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "6b8f6137-f889-485d-8c10-11f0e7f92def", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from `your-project`.`elementary`.`dbt_run_results`\n),\n\ndbt_models as (\n    select * from `your-project`.`elementary`.`dbt_models`\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    timestamp_trunc(cast(run_results.generated_at as timestamp), day)\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    timestamp_trunc(cast(run_results.generated_at as timestamp), day)\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "`your-project`.`elementary`.`model_run_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:18.581694Z", "completed_at": "2023-11-06T00:52:18.586681Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:18.587491Z", "completed_at": "2023-11-06T00:52:19.239013Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.6600050926208496, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "9878a2ee-4985-4bfc-b210-7c32d785502e", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from `your-project`.`elementary`.`dbt_run_results`\n),\n\ndbt_snapshots as (\n    select * from `your-project`.`elementary`.`dbt_snapshots`\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "`your-project`.`elementary`.`snapshot_run_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:19.225476Z", "completed_at": "2023-11-06T00:52:19.242914Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:19.245055Z", "completed_at": "2023-11-06T00:52:19.928728Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7095632553100586, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "fbbcff14-ea29-4aa6-85e7-76038b84f37c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.enriched_exposures", "compiled": true, "compiled_code": "\n\nwith dbt_exposures as (\n  select * from `your-project`.`elementary`.`dbt_exposures`\n),\n\nelementary_exposures as (\n  select * from `your-project`.`elementary`.`elementary_exposures`\n)\n\n\nselect * from dbt_exposures where not exists (select 1 from elementary_exposures where dbt_exposures.unique_id = elementary_exposures.unique_id)\n\nunion  distinct \n select * from elementary_exposures", "relation_name": "`your-project`.`elementary`.`enriched_exposures`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:16.743852Z", "completed_at": "2023-11-06T00:52:16.743854Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:16.744997Z", "completed_at": "2023-11-06T00:52:20.109049Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.3702690601348877, "adapter_response": {"_message": "INSERT 113", "code": "INSERT", "rows_affected": 113}, "message": "INSERT 113", "failures": null, "unique_id": "seed.jaffle_shop.raw_payments", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:20.388873Z", "completed_at": "2023-11-06T00:52:20.408237Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:20.413683Z", "completed_at": "2023-11-06T00:52:21.184434Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8078188896179199, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "b5c8bdc0-e087-4dc9-bb9b-0bbe260ff65c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from `your-project`.`elementary`.`elementary_test_results`\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "`your-project`.`elementary`.`alerts_dbt_tests`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:20.379636Z", "completed_at": "2023-11-06T00:52:20.403886Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:20.409521Z", "completed_at": "2023-11-06T00:52:21.202856Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.8279819488525391, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "5d23e866-be6c-4d03-97eb-bc165d6ec503", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from `your-project`.`elementary`.`dbt_source_freshness_results`\n),\n\nsources as (\n  select * from `your-project`.`elementary`.`dbt_sources`\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  results.generated_at as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "`your-project`.`elementary`.`alerts_dbt_source_freshness`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:20.387932Z", "completed_at": "2023-11-06T00:52:20.402994Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:20.404293Z", "completed_at": "2023-11-06T00:52:21.229818Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.8542890548706055, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "8ec78bec-93b6-4720-950e-b632623156a7", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from `your-project`.`elementary`.`elementary_test_results`\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "`your-project`.`elementary`.`alerts_anomaly_detection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:21.189242Z", "completed_at": "2023-11-06T00:52:21.195946Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:21.196886Z", "completed_at": "2023-11-06T00:52:21.893810Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7109460830688477, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "8ada62fd-2e3c-441d-9110-4a319b44bccc", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from `your-project`.`elementary`.`elementary_test_results`\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "`your-project`.`elementary`.`alerts_schema_changes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:21.244974Z", "completed_at": "2023-11-06T00:52:21.250293Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:21.251143Z", "completed_at": "2023-11-06T00:52:21.952069Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7098560333251953, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "d2a3a8ba-9299-4e06-9f9a-8da3af29aa11", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_models`\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_tests`\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_sources`\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_snapshots`\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_metrics`\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_exposures`\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_seeds`\n\n\norder by metadata_hash", "relation_name": "`your-project`.`elementary`.`dbt_artifacts_hashes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:21.907822Z", "completed_at": "2023-11-06T00:52:21.914792Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:21.916005Z", "completed_at": "2023-11-06T00:52:22.606117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7043111324310303, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "8ce9318f-1bcc-4812-8ac0-29263855140b", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.jaffle_shop.stg_customers", "compiled": true, "compiled_code": "with source as (\n    select * from `your-project`.`jaffle_shop`.`raw_customers`\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "`your-project`.`jaffle_shop`.`stg_customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:21.956803Z", "completed_at": "2023-11-06T00:52:21.962773Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:21.963620Z", "completed_at": "2023-11-06T00:52:22.609345Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.656301736831665, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "fd7bd9b2-2727-4ff1-b395-5402faad3561", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.jaffle_shop.stg_orders", "compiled": true, "compiled_code": "with source as (\n    select * from `your-project`.`jaffle_shop`.`raw_orders`\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "`your-project`.`jaffle_shop`.`stg_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:22.623616Z", "completed_at": "2023-11-06T00:52:22.638194Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:22.639924Z", "completed_at": "2023-11-06T00:52:23.337430Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7175800800323486, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "37b42fe2-f535-436c-9b35-df5afc06c89d", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from `your-project`.`elementary`.`model_run_results`\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from `your-project`.`elementary`.`snapshot_run_results`\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       generated_at as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "`your-project`.`elementary`.`alerts_dbt_models`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:22.622664Z", "completed_at": "2023-11-06T00:52:22.638645Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:22.645613Z", "completed_at": "2023-11-06T00:52:23.399333Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7799789905548096, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "26607cb6-4de1-4b0e-8478-5d81241b0fbe", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from `your-project`.`elementary`.`metrics_anomaly_score`\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as `is_anomaly_1_5`,\n        case when abs(anomaly_score) >= 2 then true else false end as `is_anomaly_2`,\n        case when abs(anomaly_score) >= 2.5 then true else false end as `is_anomaly_2_5`,\n        case when abs(anomaly_score) >= 3 then true else false end as `is_anomaly_3`,\n        case when abs(anomaly_score) >= 3.5 then true else false end as `is_anomaly_3_5`,\n        case when abs(anomaly_score) >= 4 then true else false end as `is_anomaly_4`,\n        case when abs(anomaly_score) >= 4.5 then true else false end as `is_anomaly_4_5`\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "`your-project`.`elementary`.`anomaly_threshold_sensitivity`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:23.342352Z", "completed_at": "2023-11-06T00:52:23.347156Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:23.347955Z", "completed_at": "2023-11-06T00:52:24.169116Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.8311018943786621, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "985cc2e7-ce01-410c-8502-de96534f6492", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.jaffle_shop.stg_payments", "compiled": true, "compiled_code": "with source as (\n    select * from `your-project`.`jaffle_shop`.`raw_payments`\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "`your-project`.`jaffle_shop`.`stg_payments`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:23.403429Z", "completed_at": "2023-11-06T00:52:23.411684Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:23.412616Z", "completed_at": "2023-11-06T00:52:24.410635Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0090389251708984, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "f6752d31-e3f8-4ca7-bf91-33eeaedfaf92", "slot_ms": 18}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `your-project`.`jaffle_shop`.`stg_customers`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:24.190410Z", "completed_at": "2023-11-06T00:52:24.206334Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:24.208174Z", "completed_at": "2023-11-06T00:52:25.071637Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.8882131576538086, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "13c47865-1e03-411a-8a9e-5f7646800580", "slot_ms": 49}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select customer_id as unique_field\n  from `your-project`.`jaffle_shop`.`stg_customers`\n  where customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:24.415269Z", "completed_at": "2023-11-06T00:52:24.419773Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:24.420545Z", "completed_at": "2023-11-06T00:52:25.199420Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7870070934295654, "adapter_response": {"_message": "SELECT (1.0 rows, 1.0 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1030, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "e0f18b26-cc02-4d7d-b811-fb5539df71ae", "slot_ms": 64}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `your-project`.`jaffle_shop`.`stg_orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:21.210682Z", "completed_at": "2023-11-06T00:52:21.232563Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:21.235033Z", "completed_at": "2023-11-06T00:52:25.531629Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.325819730758667, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "31d49831-efa6-418c-a350-aadf6089b355", "slot_ms": 1961}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "\n\n-- depends_on: `your-project`.`elementary`.`elementary_test_results`\nwith empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as result_row\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`test_result_rows`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:25.082354Z", "completed_at": "2023-11-06T00:52:25.091283Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:25.092303Z", "completed_at": "2023-11-06T00:52:25.793878Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.715012788772583, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "a9fd1b29-fb6f-4a62-9abf-7af908ae387c", "slot_ms": 24}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `your-project`.`jaffle_shop`.`stg_orders`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:25.204681Z", "completed_at": "2023-11-06T00:52:25.210033Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:25.211017Z", "completed_at": "2023-11-06T00:52:26.143677Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9427061080932617, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "8f7ad570-45de-4945-ac1a-38d296a33506", "slot_ms": 41}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `your-project`.`jaffle_shop`.`stg_orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:25.544473Z", "completed_at": "2023-11-06T00:52:25.554994Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:25.556468Z", "completed_at": "2023-11-06T00:52:26.310586Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.769686222076416, "adapter_response": {"_message": "SELECT (1.0 rows, 1.4 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1446, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "98534fdf-c5c0-408d-aed0-056b72e81609", "slot_ms": 40}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `your-project`.`jaffle_shop`.`stg_payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:25.799421Z", "completed_at": "2023-11-06T00:52:25.806464Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:25.807524Z", "completed_at": "2023-11-06T00:52:26.539825Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7430188655853271, "adapter_response": {"_message": "SELECT (1.0 rows, 904.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 904, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "d8468b95-c3c2-40df-9836-a0ba5f69ff77", "slot_ms": 27}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_id\nfrom `your-project`.`jaffle_shop`.`stg_payments`\nwhere payment_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:26.152165Z", "completed_at": "2023-11-06T00:52:26.163736Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:26.164981Z", "completed_at": "2023-11-06T00:52:26.863528Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7141308784484863, "adapter_response": {"_message": "SELECT (1.0 rows, 904.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 904, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "b1c4ba6a-78cc-49af-b353-da656587943a", "slot_ms": 34}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select payment_id as unique_field\n  from `your-project`.`jaffle_shop`.`stg_payments`\n  where payment_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:26.874860Z", "completed_at": "2023-11-06T00:52:26.879703Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:26.884150Z", "completed_at": "2023-11-06T00:52:30.340938Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.476526975631714, "adapter_response": {"_message": "CREATE TABLE (99.0 rows, 6.5 KiB processed)", "code": "CREATE TABLE", "rows_affected": 99, "bytes_processed": 6660, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "9bd864dc-d916-4b9e-a795-ce9f77fdc642", "slot_ms": 1973}, "message": "CREATE TABLE (99.0 rows, 6.5 KiB processed)", "failures": null, "unique_id": "model.jaffle_shop.orders", "compiled": true, "compiled_code": "\n\n\n\nwith orders as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_orders`\n\n),\n\npayments as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_payments`\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect * from final", "relation_name": "`your-project`.`jaffle_shop`.`orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:26.870646Z", "completed_at": "2023-11-06T00:52:26.879303Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:26.880871Z", "completed_at": "2023-11-06T00:52:30.359695Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.5119011402130127, "adapter_response": {"_message": "CREATE TABLE (100.0 rows, 6.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 100, "bytes_processed": 6170, "bytes_billed": 31457280, "location": "asia-northeast1", "project_id": "your-project", "job_id": "e4fc95a7-f4f5-4e3d-9fbb-a455cca76fb6", "slot_ms": 3280}, "message": "CREATE TABLE (100.0 rows, 6.0 KiB processed)", "failures": null, "unique_id": "model.jaffle_shop.customers", "compiled": true, "compiled_code": "\n\n\nwith customers as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_customers`\n\n),\n\norders as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_orders`\n\n),\n\npayments as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_payments`\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final", "relation_name": "`your-project`.`jaffle_shop`.`customers`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:30.388297Z", "completed_at": "2023-11-06T00:52:30.400961Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:30.410087Z", "completed_at": "2023-11-06T00:52:31.212536Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.831960916519165, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "4b8aa01f-53a5-4ea5-8050-fe80df0e9b56", "slot_ms": 28}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:30.396485Z", "completed_at": "2023-11-06T00:52:30.401416Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:30.417495Z", "completed_at": "2023-11-06T00:52:31.226299Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.8315420150756836, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "7789f57d-75fc-4beb-a46a-ff86b29e20da", "slot_ms": 25}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect bank_transfer_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere bank_transfer_amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:30.383997Z", "completed_at": "2023-11-06T00:52:30.400498Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:30.402887Z", "completed_at": "2023-11-06T00:52:31.258274Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8788871765136719, "adapter_response": {"_message": "SELECT (1.0 rows, 1.0 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1030, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "d37c320c-a596-4781-9626-ce79d56c8194", "slot_ms": 44}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `your-project`.`jaffle_shop`.`orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:31.265150Z", "completed_at": "2023-11-06T00:52:31.270618Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:31.271485Z", "completed_at": "2023-11-06T00:52:32.065409Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8179919719696045, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "dabc04e7-bccc-4c9e-8418-1ae292828c39", "slot_ms": 39}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:31.216479Z", "completed_at": "2023-11-06T00:52:31.229615Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:31.231428Z", "completed_at": "2023-11-06T00:52:32.079882Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.8732962608337402, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "457bdc98-54e8-49c3-9975-20ad8504d11e", "slot_ms": 22}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect coupon_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere coupon_amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:31.239609Z", "completed_at": "2023-11-06T00:52:31.244315Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:31.246163Z", "completed_at": "2023-11-06T00:52:32.092629Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.8645250797271729, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "71669617-a06c-4076-bbef-9b28c2d53c62", "slot_ms": 34}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_card_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere credit_card_amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:32.103132Z", "completed_at": "2023-11-06T00:52:32.118500Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:32.120087Z", "completed_at": "2023-11-06T00:52:32.892699Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7969319820404053, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "0a817f7d-36f7-42ce-a7e7-e76b50c63fbe", "slot_ms": 35}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gift_card_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere gift_card_amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:32.113413Z", "completed_at": "2023-11-06T00:52:32.126494Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:32.133917Z", "completed_at": "2023-11-06T00:52:32.895051Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.7955210208892822, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "57a34af6-1790-425d-869e-49420dbc34b3", "slot_ms": 45}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `your-project`.`jaffle_shop`.`orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:32.108681Z", "completed_at": "2023-11-06T00:52:32.118929Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:32.126898Z", "completed_at": "2023-11-06T00:52:32.953240Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.853240966796875, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "e9c85637-413c-453a-b217-6201128e8d0c", "slot_ms": 24}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:32.905223Z", "completed_at": "2023-11-06T00:52:32.923304Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:32.925089Z", "completed_at": "2023-11-06T00:52:33.727422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8269178867340088, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "b8d75617-c24a-4ac0-bbdb-69ce274aac17", "slot_ms": 68}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `your-project`.`jaffle_shop`.`customers`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:32.957002Z", "completed_at": "2023-11-06T00:52:32.961547Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:32.962348Z", "completed_at": "2023-11-06T00:52:33.741169Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7865140438079834, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "0df9a0a4-9b6d-4734-b459-70da81cff04c", "slot_ms": 57}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select customer_id as unique_field\n  from `your-project`.`jaffle_shop`.`customers`\n  where customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2023-11-06T00:52:32.907871Z", "completed_at": "2023-11-06T00:52:32.923844Z"}, {"name": "execute", "started_at": "2023-11-06T00:52:32.932184Z", "completed_at": "2023-11-06T00:52:33.859215Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.9574010372161865, "adapter_response": {"_message": "SELECT (1.0 rows, 1.6 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1592, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "b9089a41-87bc-4938-887d-8ec790031c07", "slot_ms": 122}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from `your-project`.`jaffle_shop`.`orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `your-project`.`jaffle_shop`.`customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}], "elapsed_time": 68.85849285125732, "args": {"enable_legacy_logger": false, "printer_width": 80, "profiles_dir": "/Users/yu/local/src/github/jaffle_shop", "log_format": "default", "warn_error_options": {"include": [], "exclude": []}, "quiet": false, "use_colors": true, "log_file_max_bytes": 10485760, "project_dir": "/Users/yu/local/src/github/jaffle_shop", "vars": {}, "invocation_command": "dbt build", "exclude": [], "partial_parse": true, "cache_selected_only": false, "send_anonymous_usage_stats": true, "show": false, "use_colors_file": true, "write_json": true, "log_path": "/Users/yu/local/src/github/jaffle_shop/logs", "partial_parse_file_diff": true, "resource_types": [], "macro_debugging": false, "log_level_file": "debug", "which": "build", "select": [], "populate_cache": true, "print": true, "show_resource_report": false, "version_check": true, "static_parser": true, "include_saved_query": false, "strict_mode": false, "introspect": true, "defer": false, "log_format_file": "debug", "log_level": "info", "favor_state": false, "indirect_selection": "eager"}}
