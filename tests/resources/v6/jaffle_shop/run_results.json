{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.0", "generated_at": "2024-05-21T08:37:38.380970Z", "invocation_id": "831255cf-2d89-4ca7-9101-a2a774a131c4", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.917763Z", "completed_at": "2024-05-21T08:37:17.966476Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:18.059026Z", "completed_at": "2024-05-21T08:37:20.119739Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 2.290243148803711, "adapter_response": {"_message": "CREATE TABLE (1.0 rows, 0 processed)", "code": "CREATE TABLE", "rows_affected": 1, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "551616dc-36a9-42f6-8052-7f6c54545cf3", "slot_ms": 82}, "message": "CREATE TABLE (1.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.13.2' as dbt_pkg_version", "relation_name": "`your-project`.`elementary`.`metadata`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.959859Z", "completed_at": "2024-05-21T08:37:17.959860Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.974361Z", "completed_at": "2024-05-21T08:37:22.080679Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 4.250077962875366, "adapter_response": {"_message": "INSERT 99", "code": "INSERT", "rows_affected": 99}, "message": "INSERT 99", "failures": null, "unique_id": "seed.jaffle_shop.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.960282Z", "completed_at": "2024-05-21T08:37:17.960283Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.984381Z", "completed_at": "2024-05-21T08:37:22.169424Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 4.338458061218262, "adapter_response": {"_message": "INSERT 113", "code": "INSERT", "rows_affected": 113}, "message": "INSERT 113", "failures": null, "unique_id": "seed.jaffle_shop.raw_payments", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.871734Z", "completed_at": "2024-05-21T08:37:17.961333Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.993999Z", "completed_at": "2024-05-21T08:37:22.495963Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 4.694088935852051, "adapter_response": {"_message": "MERGE (0.0 rows, 432.4 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 442778, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "6a830cbc-9906-46ca-8f0c-d8a9da2ea35f", "slot_ms": 1144}, "message": "MERGE (0.0 rows, 432.4 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as message\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast('dummy_string' as string) as resource_type\n\n,\n                \n        cast(123456789.99 as FLOAT64) as execution_time\n\n,\n                \n        cast('dummy_string' as string) as execute_started_at\n\n,\n                \n        cast('dummy_string' as string) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as string) as compile_started_at\n\n,\n                \n        cast('dummy_string' as string) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as BOOL) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as string) as query_id\n\n,\n                \n        cast('dummy_string' as string) as thread_id\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('dummy_string' as string) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_run_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.954723Z", "completed_at": "2024-05-21T08:37:17.979266Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:18.065737Z", "completed_at": "2024-05-21T08:37:22.530328Z"}], "thread_id": "Thread-15 (worker)", "execution_time": 4.7002928256988525, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "12e3ee17-e277-47c2-9582-342a8bdeb9da", "slot_ms": 1520}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as string) as column_state_id\n\n,\n                \n        cast('dummy_string' as string) as full_column_name\n\n,\n                \n        cast('dummy_string' as string) as full_table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as data_type\n\n,\n                \n        cast (True as BOOL) as is_new\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`schema_columns_snapshot`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.804357Z", "completed_at": "2024-05-21T08:37:17.846744Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.921165Z", "completed_at": "2024-05-21T08:37:22.553312Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.763556718826294, "adapter_response": {"_message": "MERGE (0.0 rows, 24.2 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 24744, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "83625f7e-50cb-4981-b7b8-dcb35c5f286e", "slot_ms": 952}, "message": "MERGE (0.0 rows, 24.2 KiB processed)", "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as string) as id\n\n,\n                \n        cast('dummy_string' as string) as full_table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as metric_name\n\n,\n                \n        cast(123456789.99 as FLOAT64) as metric_value\n\n,\n                \n        cast('dummy_string' as string) as source_value\n\n,\n                cast('2091-02-17' as timestamp) as bucket_start\n\n,\n                cast('2091-02-17' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as INT64) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as timestamp) as updated_at\n\n,\n                \n        cast('dummy_string' as string) as dimension\n\n,\n                \n        cast('dummy_string' as string) as dimension_value\n\n,\n                \n        cast('dummy_string' as string) as metric_properties\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`data_monitoring_metrics`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.890755Z", "completed_at": "2024-05-21T08:37:17.964850Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:18.045329Z", "completed_at": "2024-05-21T08:37:22.639066Z"}], "thread_id": "Thread-10 (worker)", "execution_time": 4.835556745529175, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "72ccc1a1-916f-433f-bf37-d2fc1855cb46", "slot_ms": 2592}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as string) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as string) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as FLOAT64) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast('dummy_string' as string) as error\n\n,\n                \n        cast('dummy_string' as string) as compile_started_at\n\n,\n                \n        cast('dummy_string' as string) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as string) as execute_started_at\n\n,\n                \n        cast('dummy_string' as string) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                \n        cast('dummy_string' as string) as warn_after\n\n,\n                \n        cast('dummy_string' as string) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`dbt_source_freshness_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.910358Z", "completed_at": "2024-05-21T08:37:17.966214Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:18.056068Z", "completed_at": "2024-05-21T08:37:22.652831Z"}], "thread_id": "Thread-13 (worker)", "execution_time": 4.823534965515137, "adapter_response": {"_message": "MERGE (0.0 rows, 85.1 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 87119, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "800c803c-4052-495a-9b4e-805769cc22fc", "slot_ms": 1477}, "message": "MERGE (0.0 rows, 85.1 KiB processed)", "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as id\n\n,\n                \n        cast('dummy_string' as string) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_unique_id\n\n,\n                \n        cast('dummy_string' as string) as invocation_id\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as table_name\n\n,\n                \n        cast('dummy_string' as string) as column_name\n\n,\n                \n        cast('dummy_string' as string) as test_type\n\n,\n                \n        cast('dummy_string' as string) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_results_description\n\n,\n                \n        cast('dummy_string' as string) as owners\n\n,\n                \n        cast('dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_results_query\n\n,\n                \n        cast('dummy_string' as string) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_params\n\n,\n                \n        cast('dummy_string' as string) as severity\n\n,\n                \n        cast('dummy_string' as string) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as string) as test_short_name\n\n,\n                \n        cast('dummy_string' as string) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "`your-project`.`elementary`.`elementary_test_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.849176Z", "completed_at": "2024-05-21T08:37:17.960967Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.989632Z", "completed_at": "2024-05-21T08:37:22.770209Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 4.9693238735198975, "adapter_response": {"_message": "MERGE (0.0 rows, 2.1 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 2108, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "a4d7167d-f353-4d0a-9895-61efb9e94e52", "slot_ms": 1111}, "message": "MERGE (0.0 rows, 2.1 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as job_run_id\n\n,\n                \n        cast('dummy_string' as string) as run_started_at\n\n,\n                \n        cast('dummy_string' as string) as run_completed_at\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as string) as command\n\n,\n                \n        cast('dummy_string' as string) as dbt_version\n\n,\n                \n        cast('dummy_string' as string) as elementary_version\n\n,\n                \n        cast (True as BOOL) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as vars\n\n,\n                \n        cast('dummy_string' as string) as target_name\n\n,\n                \n        cast('dummy_string' as string) as target_database\n\n,\n                \n        cast('dummy_string' as string) as target_schema\n\n,\n                \n        cast('dummy_string' as string) as target_profile_name\n\n,\n                \n        cast(123456789 as INT64) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as yaml_selector\n\n,\n                \n        cast('dummy_string' as string) as project_id\n\n,\n                \n        cast('dummy_string' as string) as project_name\n\n,\n                \n        cast('dummy_string' as string) as env\n\n,\n                \n        cast('dummy_string' as string) as env_id\n\n,\n                \n        cast('dummy_string' as string) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as cause\n\n,\n                \n        cast('dummy_string' as string) as pull_request_id\n\n,\n                \n        cast('dummy_string' as string) as git_sha\n\n,\n                \n        cast('dummy_string' as string) as orchestrator\n\n,\n                \n        cast('dummy_string' as string) as dbt_user\n\n,\n                \n        cast('dummy_string' as string) as job_url\n\n,\n                \n        cast('dummy_string' as string) as job_run_url\n\n,\n                \n        cast('dummy_string' as string) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_invocations`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.959614Z", "completed_at": "2024-05-21T08:37:17.959616Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.966690Z", "completed_at": "2024-05-21T08:37:22.783004Z"}], "thread_id": "Thread-16 (worker)", "execution_time": 4.952554941177368, "adapter_response": {"_message": "INSERT 100", "code": "INSERT", "rows_affected": 100}, "message": "INSERT 100", "failures": null, "unique_id": "seed.jaffle_shop.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.172674Z", "completed_at": "2024-05-21T08:37:22.176607Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.176912Z", "completed_at": "2024-05-21T08:37:22.846041Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.6741428375244141, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "ad3ab631-f3a2-48b9-9c9e-12f6c6c9026a", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.jaffle_shop.stg_payments", "compiled": true, "compiled_code": "with source as (\n    select * from `your-project`.`jaffle_shop`.`raw_payments`\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "`your-project`.`jaffle_shop`.`stg_payments`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.087675Z", "completed_at": "2024-05-21T08:37:22.095803Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.096238Z", "completed_at": "2024-05-21T08:37:22.917751Z"}], "thread_id": "Thread-20 (worker)", "execution_time": 0.8313488960266113, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "b2400bdc-ecca-4d02-86dc-b86cfa958f81", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.jaffle_shop.stg_orders", "compiled": true, "compiled_code": "with source as (\n    select * from `your-project`.`jaffle_shop`.`raw_orders`\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "`your-project`.`jaffle_shop`.`stg_orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.740519Z", "completed_at": "2024-05-21T08:37:22.753320Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.757164Z", "completed_at": "2024-05-21T08:37:23.398448Z"}], "thread_id": "Thread-15 (worker)", "execution_time": 0.6646509170532227, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "308db5dd-baf1-404c-9b0f-ef5c688c34fc", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from `your-project`.`elementary`.`elementary_test_results`\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "`your-project`.`elementary`.`alerts_dbt_tests`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.773821Z", "completed_at": "2024-05-21T08:37:22.779778Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.780015Z", "completed_at": "2024-05-21T08:37:23.446548Z"}], "thread_id": "Thread-13 (worker)", "execution_time": 0.6735038757324219, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "40448879-8529-4593-aeba-8b904b134838", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    timestamp_diff(\nmax(cast(run_completed_at as timestamp))\n, \nmin(cast(run_started_at as timestamp))\n, second)\n as job_run_execution_time\n  from `your-project`.`elementary`.`dbt_invocations`\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "`your-project`.`elementary`.`job_run_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.722586Z", "completed_at": "2024-05-21T08:37:22.727538Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.731136Z", "completed_at": "2024-05-21T08:37:23.577931Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.8733899593353271, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "5ccaeb9b-3208-4609-b0b0-af769b7f8bef", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from `your-project`.`elementary`.`data_monitoring_metrics`\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "`your-project`.`elementary`.`monitors_runs`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.744124Z", "completed_at": "2024-05-21T08:37:22.753095Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.754661Z", "completed_at": "2024-05-21T08:37:23.607159Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8730149269104004, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "fcf3db71-38fe-465c-b547-a0ea8bf1fa3f", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from `your-project`.`elementary`.`elementary_test_results`\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "`your-project`.`elementary`.`alerts_schema_changes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.736960Z", "completed_at": "2024-05-21T08:37:22.753561Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.760397Z", "completed_at": "2024-05-21T08:37:23.609247Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.8808748722076416, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "3374d42c-2a32-45ee-a28b-30da9117079c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from `your-project`.`elementary`.`elementary_test_results`\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "`your-project`.`elementary`.`alerts_anomaly_detection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.786392Z", "completed_at": "2024-05-21T08:37:22.855238Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.856305Z", "completed_at": "2024-05-21T08:37:23.698825Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.9131169319152832, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "62d1e3e6-b6b9-45ae-99a1-02ace9e220fb", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.jaffle_shop.stg_customers", "compiled": true, "compiled_code": "with source as (\n    select * from `your-project`.`jaffle_shop`.`raw_customers`\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "`your-project`.`jaffle_shop`.`stg_customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.707941Z", "completed_at": "2024-05-21T08:37:22.727033Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.728740Z", "completed_at": "2024-05-21T08:37:23.706648Z"}], "thread_id": "Thread-19 (worker)", "execution_time": 1.0148110389709473, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "f9e56821-27d9-4cc7-a03c-ebad31d4aa3c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from `your-project`.`elementary`.`data_monitoring_metrics`\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n       timestamp_add(cast(\n    timestamp_trunc(cast(current_timestamp as timestamp), day)\n as timestamp), INTERVAL cast(-7 as INT64) day)\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "`your-project`.`elementary`.`metrics_anomaly_score`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.873911Z", "completed_at": "2024-05-21T08:37:22.884718Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.888075Z", "completed_at": "2024-05-21T08:37:24.341507Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 1.4826679229736328, "adapter_response": {"_message": "SELECT (1.0 rows, 904.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 904, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "377d9fd9-8e02-472b-9137-72f6ce78d137", "slot_ms": 29}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select payment_id as unique_field\n  from `your-project`.`jaffle_shop`.`stg_payments`\n  where payment_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.859587Z", "completed_at": "2024-05-21T08:37:22.878738Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.879580Z", "completed_at": "2024-05-21T08:37:24.343097Z"}], "thread_id": "Thread-16 (worker)", "execution_time": 1.4874892234802246, "adapter_response": {"_message": "SELECT (1.0 rows, 1.4 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1446, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "ebee1ff4-f538-45de-bad7-131148716778", "slot_ms": 36}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `your-project`.`jaffle_shop`.`stg_payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.867440Z", "completed_at": "2024-05-21T08:37:22.890763Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.891388Z", "completed_at": "2024-05-21T08:37:24.344525Z"}], "thread_id": "Thread-10 (worker)", "execution_time": 1.4860589504241943, "adapter_response": {"_message": "SELECT (1.0 rows, 904.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 904, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "1c99e362-c753-4196-aaa8-d73695bb7238", "slot_ms": 14}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_id\nfrom `your-project`.`jaffle_shop`.`stg_payments`\nwhere payment_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:23.402249Z", "completed_at": "2024-05-21T08:37:23.407786Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:23.408159Z", "completed_at": "2024-05-21T08:37:24.549233Z"}], "thread_id": "Thread-15 (worker)", "execution_time": 1.1480529308319092, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "ab130b01-5a56-4a57-884a-1ec78ef6c703", "slot_ms": 17}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `your-project`.`jaffle_shop`.`stg_orders`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.921131Z", "completed_at": "2024-05-21T08:37:22.935197Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.970628Z", "completed_at": "2024-05-21T08:37:24.593350Z"}], "thread_id": "Thread-20 (worker)", "execution_time": 1.6730742454528809, "adapter_response": {"_message": "SELECT (1.0 rows, 1.0 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1030, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "9d2ce21e-de3a-4806-a3cf-f277fa528b33", "slot_ms": 37}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `your-project`.`jaffle_shop`.`stg_orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:23.448884Z", "completed_at": "2024-05-21T08:37:23.452276Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:23.452550Z", "completed_at": "2024-05-21T08:37:24.773410Z"}], "thread_id": "Thread-13 (worker)", "execution_time": 1.3251047134399414, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "3854c81f-46f7-4c81-8928-8ad184e52ce6", "slot_ms": 27}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `your-project`.`jaffle_shop`.`stg_orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:23.710210Z", "completed_at": "2024-05-21T08:37:23.722597Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:23.733097Z", "completed_at": "2024-05-21T08:37:24.832534Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 1.12528395652771, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "a046df61-3dd5-487d-a52e-971308ca891c", "slot_ms": 16}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `your-project`.`jaffle_shop`.`stg_customers`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:23.722943Z", "completed_at": "2024-05-21T08:37:23.735811Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:23.736509Z", "completed_at": "2024-05-21T08:37:24.917430Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.1961188316345215, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "10f0893c-5de5-4d2f-bbd5-426782efb486", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from `your-project`.`elementary`.`metrics_anomaly_score`\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as `is_anomaly_1_5`,\n        case when abs(anomaly_score) >= 2 then true else false end as `is_anomaly_2`,\n        case when abs(anomaly_score) >= 2.5 then true else false end as `is_anomaly_2_5`,\n        case when abs(anomaly_score) >= 3 then true else false end as `is_anomaly_3`,\n        case when abs(anomaly_score) >= 3.5 then true else false end as `is_anomaly_3_5`,\n        case when abs(anomaly_score) >= 4 then true else false end as `is_anomaly_4`,\n        case when abs(anomaly_score) >= 4.5 then true else false end as `is_anomaly_4_5`\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "`your-project`.`elementary`.`anomaly_threshold_sensitivity`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:23.715797Z", "completed_at": "2024-05-21T08:37:23.722239Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:23.730581Z", "completed_at": "2024-05-21T08:37:24.966479Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.258754014968872, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "0443cd33-2b96-45af-b0f4-6d570bf1b8d3", "slot_ms": 26}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select customer_id as unique_field\n  from `your-project`.`jaffle_shop`.`stg_customers`\n  where customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.858707Z", "completed_at": "2024-05-21T08:37:17.960723Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.986516Z", "completed_at": "2024-05-21T08:37:26.426830Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 8.62564992904663, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "99b4dbc2-b4e5-4a43-852d-ac51e90620b4", "slot_ms": 1336}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as label\n\n,\n                \n        cast('dummy_string' as string) as model\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as sql\n\n,\n                \n        cast('dummy_string' as string) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_metrics`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.886003Z", "completed_at": "2024-05-21T08:37:17.961991Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:18.001613Z", "completed_at": "2024-05-21T08:37:26.615447Z"}], "thread_id": "Thread-9 (worker)", "execution_time": 8.812555074691772, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "5dac2d4d-5f8e-4bcb-a10a-411b4deaa28b", "slot_ms": 1717}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as patch_path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as bigquery_partition_by\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_snapshots`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:22.748096Z", "completed_at": "2024-05-21T08:37:22.759951Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:22.762873Z", "completed_at": "2024-05-21T08:37:26.634450Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 3.8999080657958984, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "0643e408-93fa-41ec-aa29-2dd3b5211955", "slot_ms": 1451}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "\n\n-- depends_on: `your-project`.`elementary`.`elementary_test_results`\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as string) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as result_row\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`test_result_rows`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:24.778438Z", "completed_at": "2024-05-21T08:37:24.782210Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:24.782474Z", "completed_at": "2024-05-21T08:37:27.295953Z"}], "thread_id": "Thread-19 (worker)", "execution_time": 2.518873691558838, "adapter_response": {"_message": "CREATE TABLE (99.0 rows, 6.5 KiB processed)", "code": "CREATE TABLE", "rows_affected": 99, "bytes_processed": 6660, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "e518911f-f8f9-4f51-add9-b8801a6258ac", "slot_ms": 2527}, "message": "CREATE TABLE (99.0 rows, 6.5 KiB processed)", "failures": null, "unique_id": "model.jaffle_shop.orders", "compiled": true, "compiled_code": "\n\n\n\nwith orders as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_orders`\n\n),\n\npayments as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_payments`\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect * from final", "relation_name": "`your-project`.`jaffle_shop`.`orders`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:26.639072Z", "completed_at": "2024-05-21T08:37:26.645145Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:26.645513Z", "completed_at": "2024-05-21T08:37:27.500517Z"}], "thread_id": "Thread-10 (worker)", "execution_time": 0.8623602390289307, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "b0fef180-dbb0-4165-a586-4894d8f868f2", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from `your-project`.`elementary`.`dbt_run_results`\n),\n\ndbt_snapshots as (\n    select * from `your-project`.`elementary`.`dbt_snapshots`\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "`your-project`.`elementary`.`snapshot_run_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.840993Z", "completed_at": "2024-05-21T08:37:17.960064Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.976663Z", "completed_at": "2024-05-21T08:37:27.603500Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 9.804958820343018, "adapter_response": {"_message": "MERGE (0.0 rows, 0 processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "b363f9d1-5aa2-427d-ae50-3672607a8757", "slot_ms": 1521}, "message": "MERGE (0.0 rows, 0 processed)", "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as maturity\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('dummy_string' as string) as owner_email\n\n,\n                \n        cast('dummy_string' as string) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_columns\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_exposures`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.896589Z", "completed_at": "2024-05-21T08:37:17.965154Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:18.050359Z", "completed_at": "2024-05-21T08:37:27.690758Z"}], "thread_id": "Thread-11 (worker)", "execution_time": 9.88694715499878, "adapter_response": {"_message": "MERGE (0.0 rows, 516.0 Bytes processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 516, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "c2357a2e-d6b6-432f-b9e5-cd477004dfb6", "slot_ms": 1133}, "message": "MERGE (0.0 rows, 516.0 Bytes processed)", "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as source_name\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as identifier\n\n,\n                \n        cast('dummy_string' as string) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as string) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as string) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as freshness_description\n\n,\n                \n        cast('dummy_string' as string) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_sources`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:24.970828Z", "completed_at": "2024-05-21T08:37:24.976591Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:24.976997Z", "completed_at": "2024-05-21T08:37:27.820953Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 2.851548194885254, "adapter_response": {"_message": "CREATE TABLE (100.0 rows, 6.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 100, "bytes_processed": 6170, "bytes_billed": 31457280, "location": "asia-northeast1", "project_id": "your-project", "job_id": "e4fc373b-7c6d-4681-993a-7144a25d66cd", "slot_ms": 4208}, "message": "CREATE TABLE (100.0 rows, 6.0 KiB processed)", "failures": null, "unique_id": "model.jaffle_shop.customers", "compiled": true, "compiled_code": "\n\n\nwith customers as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_customers`\n\n),\n\norders as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_orders`\n\n),\n\npayments as (\n\n    select * from `your-project`.`jaffle_shop`.`stg_payments`\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final", "relation_name": "`your-project`.`jaffle_shop`.`customers`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.880417Z", "completed_at": "2024-05-21T08:37:17.961747Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.999228Z", "completed_at": "2024-05-21T08:37:28.178472Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 10.375988006591797, "adapter_response": {"_message": "MERGE (0.0 rows, 832.0 Bytes processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 832, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "939fd867-7722-4d08-afb4-fcb11afc87f9", "slot_ms": 1230}, "message": "MERGE (0.0 rows, 832.0 Bytes processed)", "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_seeds`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.864968Z", "completed_at": "2024-05-21T08:37:17.961565Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.996815Z", "completed_at": "2024-05-21T08:37:28.876423Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 11.07485318183899, "adapter_response": {"_message": "MERGE (0.0 rows, 24.4 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 25024, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "50e31670-e937-4909-bffa-8b20a463e3e1", "slot_ms": 2253}, "message": "MERGE (0.0 rows, 24.4 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as checksum\n\n,\n                \n        cast('dummy_string' as string) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as owner\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as patch_path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as bigquery_partition_by\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_models`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.399879Z", "completed_at": "2024-05-21T08:37:28.432861Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.435915Z", "completed_at": "2024-05-21T08:37:29.062130Z"}], "thread_id": "Thread-17 (worker)", "execution_time": 0.7005319595336914, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "ff84f6b0-b3f9-4980-85b5-d2cb8615024b", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from `your-project`.`elementary`.`dbt_source_freshness_results`\n),\n\nsources as (\n  select * from `your-project`.`elementary`.`dbt_sources`\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  cast(results.generated_at as timestamp) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "`your-project`.`elementary`.`alerts_dbt_source_freshness`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.369358Z", "completed_at": "2024-05-21T08:37:28.398506Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.419146Z", "completed_at": "2024-05-21T08:37:29.200355Z"}], "thread_id": "Thread-13 (worker)", "execution_time": 0.8461940288543701, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "7671e095-4f10-4aa1-97e5-c198d91bdb3d", "slot_ms": 11}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.387118Z", "completed_at": "2024-05-21T08:37:28.399632Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.426890Z", "completed_at": "2024-05-21T08:37:29.205849Z"}], "thread_id": "Thread-16 (worker)", "execution_time": 0.8496768474578857, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "00b685d1-72dd-4ff4-afa5-cef94b86d2f3", "slot_ms": 11}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gift_card_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere gift_card_amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.372898Z", "completed_at": "2024-05-21T08:37:28.398250Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.417368Z", "completed_at": "2024-05-21T08:37:29.216962Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.8623099327087402, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "91c6974b-5d10-4a70-9293-7186ba58a894", "slot_ms": 16}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect bank_transfer_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere bank_transfer_amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.404119Z", "completed_at": "2024-05-21T08:37:28.433082Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.438622Z", "completed_at": "2024-05-21T08:37:29.218586Z"}], "thread_id": "Thread-15 (worker)", "execution_time": 0.8503601551055908, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "335d9c52-118f-4092-be8c-ada2a4032b7a", "slot_ms": 15}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `your-project`.`jaffle_shop`.`customers`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.376154Z", "completed_at": "2024-05-21T08:37:28.399097Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.423047Z", "completed_at": "2024-05-21T08:37:29.256602Z"}], "thread_id": "Thread-18 (worker)", "execution_time": 0.9015440940856934, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "65098ae8-57fd-4063-8a46-23cad529f280", "slot_ms": 12}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect coupon_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere coupon_amount is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.383855Z", "completed_at": "2024-05-21T08:37:28.399313Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.424806Z", "completed_at": "2024-05-21T08:37:29.271856Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9160683155059814, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "62a09c97-0fcb-413a-a8be-8950a2f1886b", "slot_ms": 11}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.391138Z", "completed_at": "2024-05-21T08:37:28.406850Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.428746Z", "completed_at": "2024-05-21T08:37:29.284796Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.9282896518707275, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "67ae6f29-47f9-4d7f-9814-88f270b661e8", "slot_ms": 13}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.832246Z", "completed_at": "2024-05-21T08:37:17.896357Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:17.962214Z", "completed_at": "2024-05-21T08:37:29.309911Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 11.514928102493286, "adapter_response": {"_message": "MERGE (0.0 rows, 46.8 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 47878, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "97c8a6db-1978-4e1b-aa0e-ec249a9e1987", "slot_ms": 1670}, "message": "MERGE (0.0 rows, 46.8 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as resource_type\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_columns`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.362086Z", "completed_at": "2024-05-21T08:37:28.397793Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.415472Z", "completed_at": "2024-05-21T08:37:29.482513Z"}], "thread_id": "Thread-20 (worker)", "execution_time": 1.1306822299957275, "adapter_response": {"_message": "SELECT (1.0 rows, 1.0 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1030, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "a3bf2350-f406-4040-9a47-cbc19fb84b04", "slot_ms": 27}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `your-project`.`jaffle_shop`.`orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.407306Z", "completed_at": "2024-05-21T08:37:28.433385Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.440438Z", "completed_at": "2024-05-21T08:37:29.581197Z"}], "thread_id": "Thread-10 (worker)", "execution_time": 1.2127249240875244, "adapter_response": {"_message": "SELECT (1.0 rows, 1.6 KiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 1592, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "c4518fc6-e07a-4b7e-82ab-cfeffbdd7788", "slot_ms": 49}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from `your-project`.`jaffle_shop`.`orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `your-project`.`jaffle_shop`.`customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.380258Z", "completed_at": "2024-05-21T08:37:28.398818Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.421275Z", "completed_at": "2024-05-21T08:37:29.582919Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2275159358978271, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "c9663de3-9349-46c3-bb4c-02e592ee4049", "slot_ms": 14}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_card_amount\nfrom `your-project`.`jaffle_shop`.`orders`\nwhere credit_card_amount is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.895335Z", "completed_at": "2024-05-21T08:37:28.902729Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.903332Z", "completed_at": "2024-05-21T08:37:29.702561Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.8221621513366699, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "15408340-f5df-47cc-afe7-ec6289402cc9", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from `your-project`.`elementary`.`dbt_run_results`\n),\n\ndbt_models as (\n    select * from `your-project`.`elementary`.`dbt_models`\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    timestamp_trunc(cast(run_results.generated_at as timestamp), day)\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    timestamp_trunc(cast(run_results.generated_at as timestamp), day)\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "`your-project`.`elementary`.`model_run_results`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.393948Z", "completed_at": "2024-05-21T08:37:28.407074Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.430688Z", "completed_at": "2024-05-21T08:37:29.741989Z"}], "thread_id": "Thread-9 (worker)", "execution_time": 1.3851377964019775, "adapter_response": {"_message": "SELECT (1.0 rows, 792.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 792, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "9e6a28ba-6df1-4d9c-aadc-0bb1a35a6003", "slot_ms": 29}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `your-project`.`jaffle_shop`.`orders`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.412107Z", "completed_at": "2024-05-21T08:37:28.433748Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:28.442588Z", "completed_at": "2024-05-21T08:37:29.753081Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.3841361999511719, "adapter_response": {"_message": "SELECT (1.0 rows, 800.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 800, "bytes_billed": 10485760, "location": "asia-northeast1", "project_id": "your-project", "job_id": "660ecaac-ced3-4482-968c-8ed3c2f620b9", "slot_ms": 38}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select customer_id as unique_field\n  from `your-project`.`jaffle_shop`.`customers`\n  where customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:17.903437Z", "completed_at": "2024-05-21T08:37:17.965936Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:18.053488Z", "completed_at": "2024-05-21T08:37:30.020005Z"}], "thread_id": "Thread-12 (worker)", "execution_time": 12.20436406135559, "adapter_response": {"_message": "MERGE (0.0 rows, 15.8 KiB processed)", "code": "MERGE", "rows_affected": 0, "bytes_processed": 16213, "bytes_billed": 20971520, "location": "asia-northeast1", "project_id": "your-project", "job_id": "50386124-7b34-42a9-bb45-454eb0d475ea", "slot_ms": 2169}, "message": "MERGE (0.0 rows, 15.8 KiB processed)", "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as string) as unique_id\n\n,\n                \n        cast('dummy_string' as string) as database_name\n\n,\n                \n        cast('dummy_string' as string) as schema_name\n\n,\n                \n        cast('dummy_string' as string) as name\n\n,\n                \n        cast('dummy_string' as string) as short_name\n\n,\n                \n        cast('dummy_string' as string) as alias\n\n,\n                \n        cast('dummy_string' as string) as test_column_name\n\n,\n                \n        cast('dummy_string' as string) as severity\n\n,\n                \n        cast('dummy_string' as string) as warn_if\n\n,\n                \n        cast('dummy_string' as string) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as test_params\n\n,\n                \n        cast('dummy_string' as string) as test_namespace\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as string) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as description\n\n,\n                \n        cast('dummy_string' as string) as package_name\n\n,\n                \n        cast('dummy_string' as string) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as string) as original_path\n\n,\n                \n        cast('dummy_string' as string) as path\n\n,\n                \n        cast('dummy_string' as string) as generated_at\n\n,\n                \n        cast('dummy_string' as string) as metadata_hash\n\n,\n                \n        cast('dummy_string' as string) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "`your-project`.`elementary`.`dbt_tests`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:29.709203Z", "completed_at": "2024-05-21T08:37:29.720298Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:29.720767Z", "completed_at": "2024-05-21T08:37:30.747664Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 1.039876937866211, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "55fe1112-c092-4277-91a0-7445f128f785", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from `your-project`.`elementary`.`model_run_results`\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from `your-project`.`elementary`.`snapshot_run_results`\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       cast(generated_at as timestamp) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "`your-project`.`elementary`.`alerts_dbt_models`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:30.028921Z", "completed_at": "2024-05-21T08:37:30.040212Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:30.040614Z", "completed_at": "2024-05-21T08:37:30.909840Z"}], "thread_id": "Thread-11 (worker)", "execution_time": 0.8822188377380371, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "4ae345be-a3cc-4339-aa97-0ae61ab5ffe1", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_models`\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_tests`\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_sources`\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_snapshots`\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_metrics`\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_exposures`\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_seeds`\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom `your-project`.`elementary`.`dbt_columns`\n\n\norder by metadata_hash", "relation_name": "`your-project`.`elementary`.`dbt_artifacts_hashes`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:28.881426Z", "completed_at": "2024-05-21T08:37:30.368061Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:30.368492Z", "completed_at": "2024-05-21T08:37:30.913005Z"}], "thread_id": "Thread-19 (worker)", "execution_time": 2.032863140106201, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "c15a6f1b-d4a0-4ddf-8dfe-c03626abcffc", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.information_schema_columns", "compiled": true, "compiled_code": "\n\n    \n  \n    \n  \n\n  with dbt_models_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from `your-project`.`elementary`.`dbt_models`\n  ),\n\n  dbt_snapshots_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from `your-project`.`elementary`.`dbt_snapshots`\n  ),\n\n  dbt_sources_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from `your-project`.`elementary`.`dbt_sources`\n  ),\n\n  dbt_seeds_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from `your-project`.`elementary`.`dbt_seeds`\n  ),\n\n  tables_information as (\n      select * from dbt_models_data\n      union all\n      select * from dbt_sources_data\n      union all\n      select * from dbt_snapshots_data\n      union all\n      select * from dbt_seeds_data\n  ),\n\n  columns_information as (\n      \n    \n    \n    \n        (\n    \n    \n    \n      \n    \n    \n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from `your-project`.`jaffle_shop`.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('jaffle_shop')\n    \n\n    \n)\n        \n    \n\n\n\n  ),\n\n  information_schema_columns as (\n      select col_info.*\n      from tables_information tbl_info\n      join columns_information col_info\n          on (lower(tbl_info.database_name) = lower(col_info.database_name) and\n              lower(tbl_info.schema_name) = lower(col_info.schema_name) and\n              lower(tbl_info.table_name) = lower(col_info.table_name)\n          )\n  )\n\n  select *\n  from information_schema_columns\n\n", "relation_name": "`your-project`.`elementary`.`information_schema_columns`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-21T08:37:30.920535Z", "completed_at": "2024-05-21T08:37:30.928834Z"}, {"name": "execute", "started_at": "2024-05-21T08:37:30.929423Z", "completed_at": "2024-05-21T08:37:31.928778Z"}], "thread_id": "Thread-13 (worker)", "execution_time": 1.00984787940979, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "asia-northeast1", "project_id": "your-project", "job_id": "f66c5819-e55d-45f7-a793-76878f0c6750", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.elementary.enriched_columns", "compiled": true, "compiled_code": "\n\n\nwith information_schema_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(column_name) as name,\n        data_type\n    from `your-project`.`elementary`.`information_schema_columns`\n),\n\ndbt_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(name) as name,\n        description\n    from `your-project`.`elementary`.`dbt_columns`\n)\n\nselect\n    database_name,\n    schema_name,\n    table_name,\n    name,\n    data_type,\n    description\nfrom information_schema_columns\nleft join dbt_columns using (database_name, schema_name, table_name, name)", "relation_name": "`your-project`.`elementary`.`enriched_columns`"}], "elapsed_time": 23.418078184127808, "args": {"log_format_file": "debug", "exclude_resource_types": [], "partial_parse_file_diff": true, "require_explicit_package_overrides_for_builtin_materializations": true, "which": "build", "cache_selected_only": false, "static_parser": true, "export_saved_queries": false, "resource_types": [], "favor_state": false, "log_format": "default", "send_anonymous_usage_stats": true, "strict_mode": false, "print": true, "threads": 20, "invocation_command": "dbt build --threads 20", "log_level": "info", "log_path": "/Users/yu/local/src/github/jaffle_shop/logs", "populate_cache": true, "show_resource_report": false, "warn_error_options": {"include": [], "exclude": []}, "vars": {}, "quiet": false, "empty": false, "defer": false, "partial_parse": true, "log_file_max_bytes": 10485760, "exclude": [], "printer_width": 80, "show": false, "use_colors_file": true, "include_saved_query": false, "indirect_selection": "eager", "use_colors": true, "version_check": true, "enable_legacy_logger": false, "introspect": true, "log_level_file": "debug", "profiles_dir": "/Users/yu/local/src/github/jaffle_shop", "write_json": true, "macro_debugging": false, "project_dir": "/Users/yu/local/src/github/jaffle_shop", "select": [], "require_resource_names_without_spaces": false, "source_freshness_run_project_hooks": false}}
